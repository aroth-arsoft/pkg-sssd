diff --git a/src/providers/ad/ad_common.c b/src/providers/ad/ad_common.c
index aba66a4..74361fe 100644
--- a/src/providers/ad/ad_common.c
+++ b/src/providers/ad/ad_common.c
@@ -741,7 +741,7 @@ ad_failover_init(TALLOC_CTX *mem_ctx, struct be_ctx *bectx,
     ret = be_add_online_cb(bectx, bectx, ad_online_cb, service, NULL);
     if (ret != EOK) {
         DEBUG(SSSDBG_CRIT_FAILURE, "Could not set up AD online callback\n");
-        return ret;
+        goto done;
     }
 
     ret = be_fo_service_add_callback(mem_ctx, bectx, ad_service,
@@ -793,7 +793,8 @@ ad_resolve_callback(void *private_data, struct fo_server *server)
     sdata = fo_get_server_user_data(server);
     if (fo_is_srv_lookup(server) == false && sdata == NULL) {
         DEBUG(SSSDBG_CRIT_FAILURE, "No user data?\n");
-        return;
+        ret = EINVAL;
+        goto done;
     }
 
     service = talloc_get_type(private_data, struct ad_service);
diff --git a/src/providers/ipa/ipa_hbac_rules.c b/src/providers/ipa/ipa_hbac_rules.c
index 1a812a3..7912dbe 100644
--- a/src/providers/ipa/ipa_hbac_rules.c
+++ b/src/providers/ipa/ipa_hbac_rules.c
@@ -86,7 +86,7 @@ ipa_hbac_rule_info_send(TALLOC_CTX *mem_ctx,
     req = tevent_req_create(mem_ctx, &state, struct ipa_hbac_rule_state);
     if (req == NULL) {
         DEBUG(SSSDBG_CRIT_FAILURE, "tevent_req_create failed.\n");
-        return NULL;
+        goto error;
     }
 
     state->ev = ev;
diff --git a/src/providers/ldap/sdap_async_groups.c b/src/providers/ldap/sdap_async_groups.c
index 3c274bf..3ccf7de 100644
--- a/src/providers/ldap/sdap_async_groups.c
+++ b/src/providers/ldap/sdap_async_groups.c
@@ -592,7 +592,7 @@ static int sdap_save_group(TALLOC_CTX *memctx,
         if (ret != EOK) {
             DEBUG(SSSDBG_OP_FAILURE,
                   "Error: Failed to mark group as non-posix!\n");
-            return ret;
+            goto done;
         }
     }
 
diff --git a/src/providers/ldap/sdap_idmap.c b/src/providers/ldap/sdap_idmap.c
index 53a9873..4e32212 100644
--- a/src/providers/ldap/sdap_idmap.c
+++ b/src/providers/ldap/sdap_idmap.c
@@ -211,7 +211,8 @@ sdap_idmap_init(TALLOC_CTX *mem_ctx,
     if (err != IDMAP_SUCCESS) {
         /* This should never happen */
         DEBUG(SSSDBG_CRIT_FAILURE, "sss_idmap_ctx corrupted\n");
-        return EIO;
+        ret = EIO;
+        goto done;
     }
 
 
diff --git a/src/providers/proxy/proxy_services.c b/src/providers/proxy/proxy_services.c
index 2aa44db..ee545ce 100644
--- a/src/providers/proxy/proxy_services.c
+++ b/src/providers/proxy/proxy_services.c
@@ -130,7 +130,7 @@ get_serv_byname(struct proxy_id_ctx *ctx,
     if (status != NSS_STATUS_SUCCESS && status != NSS_STATUS_NOTFOUND) {
         DEBUG(SSSDBG_MINOR_FAILURE,
               "getservbyname_r failed for service [%s].\n", name);
-        return ret;
+        goto done;
     }
 
     if (status == NSS_STATUS_NOTFOUND) {
@@ -183,7 +183,7 @@ get_serv_byport(struct proxy_id_ctx *ctx,
     if (status != NSS_STATUS_SUCCESS && status != NSS_STATUS_NOTFOUND) {
         DEBUG(SSSDBG_MINOR_FAILURE,
               "getservbyport_r failed for service [%s].\n", be_filter);
-        return ret;
+        goto done;
     }
 
     if (status == NSS_STATUS_NOTFOUND) {
